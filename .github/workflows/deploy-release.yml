name: Deploy Release

on: workflow_dispatch

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        ref: 'master'
        fetch-depth: 0

    - name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: 11
        distribution: adopt
        cache: maven
        server-id: ossrh
        server-username: MAVEN_CENTRAL_USERNAME
        server-password: MAVEN_CENTRAL_PASSWORD
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg-passphrase: GPG_PASSPHRASE

    - name: Configure Repository
      run: |
        git config user.name 'release-workflow'
        git config user.email 'contact@alexey-anufriev.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git fetch --all --tags
        git checkout master
        git pull

    - name: Detect Version
      run: |
        SNAPSHOT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        RELEASE_VERSION=${SNAPSHOT_VERSION%"-SNAPSHOT"}

        echo "Detected snapshot version: $SNAPSHOT_VERSION"
        echo "Detected release version: $RELEASE_VERSION"

        echo "SNAPSHOT_VERSION=$SNAPSHOT_VERSION" >> $GITHUB_ENV
        echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

    - name: Prepare Release
      run: |
        mvn versions:set -DremoveSnapshot -DgenerateBackupPoms=false -q
        git add .
        git commit -m "release: create v${{ env.RELEASE_VERSION }}"

    - name: Prepare Artifact
      run: mvn -B clean verify -P publish --file pom.xml

    - name: Publish to Maven Central
      run: mvn -B deploy -DskipTests=true -P publish --file pom.xml
      env:
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
        MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}

    - name: Create Release
      continue-on-error: true
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.RELEASE_VERSION }}
        release_name: v${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false

    - name: Start New Development Version
      run: |
        mvn build-helper:parse-version versions:set -DgenerateBackupPoms=false -q \
          -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.nextMinorVersion}.0-SNAPSHOT

        NEW_SNAPSHOT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        git add .
        git commit -m "release: start ${NEW_SNAPSHOT_VERSION}"
        git push
